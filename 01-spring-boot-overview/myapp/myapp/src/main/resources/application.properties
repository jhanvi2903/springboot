# To access endpoint: http://localhost:8098/myapp


#/health can be used by monitoring apps to see if your app is up or down
#the actuator endpoints such as health or info can be accessed in browser with the help of following URI
#http://localhost:8080/actuator/health
#http://localhost:8080/actuator/info
#Note -> health endpoint can be accessed by default but the info & other actuator endpoints requires the configuration in application.properties file to display the information in browser

# Use wildcard "*" to expose all endpoints
# Can also expose individual endpoints with a comma-delimited list
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

# Endpoints can also be excluded using the -
# management.endpoints.web.exposure.exclude=health,info

info.app.name = My Super Cool App
info.app.description = A crazy fun app!
info.app.version =1.0.0


#Overridding the default username and the generated password in console by spring security to access the actuator endpoints in browser
spring.security.user.name=jhanvi
spring.security.user.password=jhanvi@123

# Configured server port ->
# By default server port is 8080
# Changed the Spring Boot embedded server port
server.port=8098

# Set the context path of the application
# Access the endpoint using the following URI as the context-path is added- http://localhost:8098/myapp/endpoint
server.servlet.context-path=/myapp

# Custom Properties ->
# Custom property can be anything and can be defined unlimited
# Spring Boot application will always load the application.properties file and the value of these properties will be injected wherever they are utilised in the application
# These custom properties are injected using @Value annotation
coach.name = Mickey Mouse
team.name = The Mouse Club